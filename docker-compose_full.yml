version: '2'
 
services:
 web:
   restart: always
   build: ./web
   expose:
     - "8000"
   volumes:
     - /usr/src/app/project/static
   command: /usr/local/bin/gunicorn -w 2 -b :8000 project:app
   depends_on:
     - postgres
 
 nginx:
   restart: always
   build: ./nginx
   ports:
     - "80:80"
   volumes:
     - /www/static
   volumes_from:
     - web
   depends_on:
     - web
 
 data:
   image: postgres:9.6
   volumes:
     - /var/lib/postgresql
   command: "true"
 
 postgres:
   restart: always
   build: ./postgresql
   volumes_from:
     - data
   ports:
     - "5432:5432"


# version: '3'

# services:
#   db:
#     container_name: pgdock
#     volumes:
#       - ./db_data/var/bin/postgresql/:/var/lib/postgresql
#     ports:
#       - "5432:5432"
#     image: postgres
#     restart: always
#     environment:
#       POSTGRES_USER: pureudonhk
#       POSTGRES_PASSWORD: pureudonhk

#   web:
#     container_name: flaskweb
#     depends_on:
#       - db
#     image: flaskweb:latest
#     volumes:
#       - ./app:/app
#     ports:
#       - "80:80"
#     restart: always
#     environment:
#       - FLASK_APP=main.py
#       - FLASK_DEBUG=1
#       - 'RUN=flask run --host=0.0.0.0 --port=80'
    # command: flask run --host=0.0.0.0 --port=80
    # Infinite loop, to keep it alive, for debugging
    # command: bash -c "while true; do echo 'sleeping...' && sleep 10; done"


# cd projectfolder
# ls
# cat docker-compose.yml

# docker-compose up -d
# docker-compose down --volumes 

